name: Prepare and Push Container Image

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*'
  pull_request:
    branches: [ master ]

jobs:
  master-build:
    #    name: build the app and image
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: kruft/jenkins-update-dot-json-resigner

    steps:
#      - name: Set up Go 1.15
#        uses: actions/setup-go@v2
#        with:
#          go-version: ^1.15
#        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
      - name: Build
        run: go build -v ./...
      - name: Test with the Go CLI
        run: go test -v ./...

      - name: Prepare
        id: prep
        run: |
          VERSION=noop

          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')

            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"

          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}.*$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

#      - name: Test
#        run: go test -v ./internal/kubernetes/...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login in Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
#            ghcr.io/${GITHUB_REPOSITORY}:latest
